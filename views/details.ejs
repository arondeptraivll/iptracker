<%- include('partials/header_vietnamese') %>

<nav>
    <ul>
      <li><strong>IP Tracker</strong> by Gemlogin Tool (TuanHaii)</li>
    </ul>
    <ul>
      <li><a href="/dashboard" role="button" class="secondary">V·ªÅ B·∫£ng ƒëi·ªÅu khi·ªÉn</a></li>
      <li>
        <details role="list" dir="rtl">
          <summary aria-haspopup="listbox" role="link">
              <img src="<%= user.avatar %>" alt="Avatar" style="width: 32px; height: 32px; border-radius: 50%; vertical-align: middle;">
               <%= user.username %>
          </summary>
          <ul role="listbox">
            <li><a href="/auth/logout">ƒêƒÉng xu·∫•t</a></li>
          </ul>
        </details>
      </li>
    </ul>
</nav>

<hgroup>
    <h1>Chi ti·∫øt L∆∞·ª£t truy c·∫≠p</h1>
    <p>ID Thi·∫øt b·ªã: <code><%= visit.fingerprintId %></code> - Th·ªùi gian: <code><%= new Date(visit.timestamp).toLocaleString('vi-VN') %></code></p>
</hgroup>

<!-- H·ªÜ TH·ªêNG TAB -->
<div id="tabs">
    <div role="tablist">
        <button role="tab" aria-selected="true" aria-controls="location-panel">Th√¥ng tin V·ªã tr√≠</button>
        <button role="tab" aria-selected="false" aria-controls="fp-panel">D·∫•u v√¢n tay Tr√¨nh duy·ªát</button>
    </div>
    
    <!-- ================== TAB V·ªä TR√ç ================== -->
    <div role="tabpanel" id="location-panel">
        
        <div id="map-container" style="height: 400px; width: 100%; margin-top: 1rem; border-radius: var(--border-radius); background-color: var(--pico-muted-background-color);">
             <progress style="position: relative; top: 45%;"></progress>
        </div>
        
        <div class="grid" style="margin-top: 2rem;">
            
            <% if (visit.latitude && visit.longitude) { %>
                <article>
                    <header><strong style="color: var(--pico-color-green-400);">üìç V·ªã tr√≠ GPS (Ch√≠nh x√°c)</strong></header>
                    <ul>
                        <li><strong>Vƒ© ƒë·ªô:</strong> <code><%= visit.latitude %></code></li>
                        <li><strong>Kinh ƒë·ªô:</strong> <code><%= visit.longitude %></code></li>
                        <li><strong>ƒê·ªô ch√≠nh x√°c:</strong> kho·∫£ng <%= Math.round(visit.gpsAccuracy) %> m√©t</li>
                    </ul>
                </article>
            <% } %>

            <article id="ip-info-article">
                <header><strong>‚ÑπÔ∏è V·ªã tr√≠ IP (∆Ø·ªõc t√≠nh)</strong></header>
                <div id="ip-info-content"><progress></progress></div>
            </article>

        </div>
    </div>
    
    <!-- ================== TAB FINGERPRINT ================== -->
    <div role="tabpanel" id="fp-panel" hidden>
        <h4>C√°c th√†nh ph·∫ßn t·∫°o n√™n D·∫•u v√¢n tay Tr√¨nh duy·ªát</h4>
        <p>ƒê√¢y l√† t·∫•t c·∫£ c√°c th√¥ng tin m√† tr√¨nh duy·ªát c·ªßa kh√°ch truy c·∫≠p ƒë√£ cung c·∫•p ƒë·ªÉ t·∫°o ra m·ªôt ƒë·ªãnh danh duy nh·∫•t.</p>
        <div class="overflow-auto">
            <table>
                <thead><tr><th>Th√†nh ph·∫ßn</th><th>Gi√° tr·ªã</th></tr></thead>
                <tbody>
                    <% if (visit.fingerprintComponents && Object.keys(visit.fingerprintComponents).length > 0) { %>
                        <% Object.entries(visit.fingerprintComponents).forEach(([key, component]) => { %>
                            <tr>
                                <td style="text-transform: capitalize;"><strong><%= key.replace(/_/g, ' ') %></strong></td>
                                <td>
                                    <% if (typeof component.value === 'object' && component.value !== null) { %>
                                        <pre><code style="font-size: 0.9em; white-space: pre-wrap;"><%- JSON.stringify(component.value, null, 2).replace(/</g, "<").replace(/>/g, ">") %></code></pre>
                                    <% } else { %>
                                        <code style="word-break: break-all;"><%= component.value %></code>
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr><td colspan="2">Kh√¥ng c√≥ d·ªØ li·ªáu chi ti·∫øt v·ªÅ d·∫•u v√¢n tay.</td></tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        <footer style="margin-top: 1rem;">
             <a href="#" role="button" onclick="downloadFingerprintComponents(event)" class="secondary">T·∫£i xu·ªëng D·ªØ li·ªáu Fingerprint (JSON)</a>
        </footer>
    </div>
</div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
    // --- KHAI B√ÅO BI·∫æN JAVASCRIPT AN TO√ÄN T·ª™ D·ªÆ LI·ªÜU EJS ---
    const VISIT_IP_ADDRESS = <%- JSON.stringify(visit.ipAddress) %>;
    const HAS_GPS = <%- !!(visit.latitude && visit.longitude) %>;
    const GPS_LAT = <%- visit.latitude || 'null' %>;
    const GPS_LON = <%- visit.longitude || 'null' %>;
    const GPS_ACCURACY = <%- visit.gpsAccuracy || 'null' %>;

    // --- SCRIPT CHUNG CHO TAB V√Ä DOWNLOAD ---
    const tabs = document.querySelectorAll('[role="tab"]');
    tabs.forEach(tab => {
        tab.addEventListener('click', (e) => {
            tabs.forEach(t => t.setAttribute('aria-selected', 'false'));
            const panelId = e.currentTarget.getAttribute('aria-controls');
            e.currentTarget.setAttribute('aria-selected', 'true');
            document.querySelectorAll('[role="tabpanel"]').forEach(p => p.hidden = true);
            document.getElementById(panelId).hidden = false;
        });
    });

    function downloadFingerprintComponents(event){
      event.preventDefault();
      const jsonData = <%- JSON.stringify(visit.fingerprintComponents || {}, null, 2) %>;
      const blob = new Blob([JSON.stringify(jsonData, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `fingerprint_details_<%- visit.fingerprintId %>.json`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }
    
    // --- H√ÄM LOGIC CH√çNH ƒê·ªÇ HI·ªÇN TH·ªä D·ªÆ LI·ªÜU ---
    async function initializeLocationData() {
        const ipInfo = await fetchIpDetails();
        
        if (HAS_GPS) {
            drawMap(GPS_LAT, GPS_LON, GPS_ACCURACY, 16, 'V·ªã tr√≠ GPS ch√≠nh x√°c');
        } else if (ipInfo) {
            drawMap(ipInfo.lat, ipInfo.lon, 0, 13, 'V·ªã tr√≠ ∆∞·ªõc t√≠nh t·ª´ IP');
        } else {
             document.getElementById('map-container').innerHTML = '<p class="toast error">Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu b·∫£n ƒë·ªì.</p>';
        }
    }

    // H√†m con: G·ªçi v√† x·ª≠ l√Ω API chi ti·∫øt IP
    async function fetchIpDetails() {
        const ipInfoContainer = document.getElementById('ip-info-content');
        try {
            // ---- FIX L·ªñI ·ªû ƒê√ÇY: D√ôNG BI·∫æN JAVASCRIPT ƒê√É KHAI B√ÅO ----
            const response = await fetch(`/ip-details/${VISIT_IP_ADDRESS}`);
            const data = await response.json();
            
            if (data.status === 'success') {
                 ipInfoContainer.innerHTML = `
                    <ul>
                        <li><strong>ƒê·ªãa ch·ªâ IP:</strong> <code>${VISIT_IP_ADDRESS}</code></li>
                        <li><strong>Qu·ªëc gia:</strong> ${data.country || 'N/A'} (${data.countryCode || 'N/A'})</li>
                        <li><strong>Th√†nh ph·ªë/V√πng:</strong> ${data.city || 'N/A'}, ${data.regionName || 'N/A'}</li>
                        <li><strong>Nh√† m·∫°ng (ISP):</strong> ${data.isp || 'N/A'}</li>
                        <li><strong>T·ªï ch·ª©c:</strong> ${data.org || 'N/A'}</li>
                    </ul>`;
                return data;
            } else { throw new Error(data.message); }
        } catch (error) {
            ipInfoContainer.innerHTML = `<p style="color: var(--pico-color-red-500);">L·ªói t·∫£i th√¥ng tin IP: ${error.message}</p>`;
            return null;
        }
    }

    // H√†m con: V·∫Ω b·∫£n ƒë·ªì
    function drawMap(lat, lon, accuracy, zoom, popupText) {
        const mapContainer = document.getElementById('map-container');
        try {
            const map = L.map(mapContainer).setView([lat, lon], zoom);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '¬© OpenStreetMap' }).addTo(map);
            L.marker([lat, lon]).addTo(map).bindPopup(popupText).openPopup();
            if (accuracy > 0) {
                L.circle([lat, lon], { radius: accuracy, color: '#1095c1', fillColor: '#1095c1', fillOpacity: 0.2 }).addTo(map);
            }
        } catch(e){
            mapContainer.innerHTML = `<p class="toast error">Kh√¥ng th·ªÉ kh·ªüi t·∫°o b·∫£n ƒë·ªì. D·ªØ li·ªáu t·ªça ƒë·ªô kh√¥ng h·ª£p l·ªá.</p>`;
        }
    }

    document.addEventListener('DOMContentLoaded', initializeLocationData);
</script>

<%- include('partials/footer_vietnamese') %>
